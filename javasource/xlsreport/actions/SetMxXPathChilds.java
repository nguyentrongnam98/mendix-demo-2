// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package xlsreport.actions;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.thirdparty.org.json.JSONArray;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import mxmodelreflection.proxies.MxObjectMember;
import mxmodelreflection.proxies.MxObjectReference;
import mxmodelreflection.proxies.MxObjectType;
import xlsreport.proxies.MxXPath;
import xlsreport.proxies.RetrieveAction;
import java.util.LinkedHashMap;
import java.util.Map;

public class SetMxXPathChilds extends CustomJavaAction<java.lang.Void>
{
	/** @deprecated use Parent.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __Parent;
	private final xlsreport.proxies.MxXPath Parent;
	private final java.lang.String json;

	public SetMxXPathChilds(
		IContext context,
		IMendixObject _parent,
		java.lang.String _json
	)
	{
		super(context);
		this.__Parent = _parent;
		this.Parent = _parent == null ? null : xlsreport.proxies.MxXPath.initialize(getContext(), _parent);
		this.json = _json;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		// BEGIN USER CODE
		if(json != null && !json.isEmpty()) {
			xlsreport.proxies.MxXPath currentParent = Parent;
			Map<Long, IMendixObject> objectsToBeCommitedMap = new LinkedHashMap<>();
			JSONArray jsonArr = new JSONArray(json);
			for (var jsonObj : jsonArr.toJSONObjectCollection()) {
				var mxxpath = new MxXPath(getContext());
				mxxpath.setRetrieveType(RetrieveAction.valueOf(jsonObj.getString("rType")));
				mxxpath.setSubVisible(jsonObj.getBoolean("subV"));
				if(jsonObj.has("objMem_CN")) {
					var results = Core.createXPathQuery( String.format("//%s[%s=$value]", MxObjectMember.entityName, MxObjectMember.MemberNames.CompleteName))
							.setVariable("value", jsonObj.getString("objMem_CN"))
							.execute(getContext());
					if(results == null || results.isEmpty())
						throw new CoreException("Unable to find MxObjectMember");
					mxxpath.setMxXPath_MxObjectMember(MxObjectMember.initialize(getContext(), results.get(0)));
				}
				if(jsonObj.has("objRef_CN")) {
					var results = Core.createXPathQuery( String.format("//%s[%s=$value]", MxObjectReference.entityName, MxObjectReference.MemberNames.CompleteName))
							.setVariable("value", jsonObj.getString("objRef_CN"))
							.execute(getContext());
					if(results == null || results.isEmpty())
						throw new CoreException("Unable to find MxObjectReference");
					mxxpath.setMxXPath_MxObjectReference(MxObjectReference.initialize(getContext(), results.get(0)));
				}
				if(jsonObj.has("objType_CN")) {
					var results = Core.createXPathQuery( String.format("//%s[%s=$value]", MxObjectType.entityName, MxObjectType.MemberNames.CompleteName))
							.setVariable("value", jsonObj.getString("objType_CN"))
							.execute(getContext());
					if(results == null || results.isEmpty())
						throw new CoreException("Unable to find MxObjectType");
					mxxpath.setMxXPath_MxObjectType(MxObjectType.initialize(getContext(), results.get(0)));
				}
				currentParent.setMxXPath_ParentMxXPath(mxxpath);
				mxxpath.setChildMxXPath_MxXPath(currentParent);
				objectsToBeCommitedMap.put(mxxpath.getMendixObject().getId().toLong(), mxxpath.getMendixObject());
				objectsToBeCommitedMap.put(currentParent.getMendixObject().getId().toLong(), currentParent.getMendixObject());
				currentParent = mxxpath;
			}
			for (Map.Entry<Long, IMendixObject> objectsTobeCommitted: objectsToBeCommitedMap.entrySet())
			{
				Core.commit(getContext(),objectsTobeCommitted.getValue());
			}
		}
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "SetMxXPathChilds";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
